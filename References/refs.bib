@inproceedings{SearchProc,
  series = {ICFP’16},
  title = {Dynamic witnesses for static type errors (or,  ill-typed programs usually go wrong)},
  url = {http://dx.doi.org/10.1145/2951913.2951915},
  DOI = {10.1145/2951913.2951915},
  booktitle = {Proceedings of the 21st ACM SIGPLAN International Conference on Functional Programming},
  publisher = {ACM},
  author = {Seidel,  Eric L. and Jhala,  Ranjit and Weimer,  Westley},
  year = {2016},
  month = sep,
  pages = {228–242},
  collection = {ICFP’16}
}@online{Hazel,
title = {Hazel Project Website},
url = {https://hazel.org/},
OPTurldate = {2022-10-11},
}
@online{HazelCode,
title = {Hazel Source Code},
url = {https://github.com/hazelgrove/hazel},
OPTurldate = {2022-10-11},
}
@inbook{Blame,
  title = {Well-Typed Programs Can’t Be Blamed},
  ISBN = {9783642005909},
  ISSN = {1611-3349},
  url = {http://dx.doi.org/10.1007/978-3-642-00590-9_1},
  DOI = {10.1007/978-3-642-00590-9_1},
  booktitle = {Programming Languages and Systems},
  publisher = {Springer Berlin Heidelberg},
  author = {Wadler,  Philip and Findler,  Robert Bruce},
  year = {2009},
  pages = {1–16}
}

@article{ErrSlice,
  title = {A slicing-based approach for locating type errors},
  volume = {10},
  ISSN = {1557-7392},
  url = {http://dx.doi.org/10.1145/366378.366379},
  DOI = {10.1145/366378.366379},
  number = {1},
  journal = {ACM Transactions on Software Engineering and Methodology},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Tip,  F. and Dinesh,  T. B.},
  year = {2001},
  month = jan,
  pages = {5–55}
}

@inbook{ConstraintFreeErrSlice,
  title = {Constraint-Free Type Error Slicing},
  ISBN = {9783642320378},
  ISSN = {1611-3349},
  url = {http://dx.doi.org/10.1007/978-3-642-32037-8_1},
  DOI = {10.1007/978-3-642-32037-8_1},
  booktitle = {Trends in Functional Programming},
  publisher = {Springer Berlin Heidelberg},
  author = {Schilling,  Thomas},
  year = {2012},
  pages = {1–16}
}

@article{DynProgSlice,
  title = {Dynamic program slicing},
  volume = {29},
  ISSN = {0020-0190},
  url = {http://dx.doi.org/10.1016/0020-0190(88)90054-3},
  DOI = {10.1016/0020-0190(88)90054-3},
  number = {3},
  journal = {Information Processing Letters},
  publisher = {Elsevier BV},
  author = {Korel,  Bogdan and Laski,  Janusz},
  year = {1988},
  month = oct,
  pages = {155–163}
}
@article{ProgSlice,
  doi = {10.7302/11363},
  url = {http://deepblue.lib.umich.edu/handle/2027.42/180974},
  author = {Weiser,  Mark David},
  title = {Program Slices: Formal,  Psychological,  And Practical Investigations Of An Automatic Program Abstraction Method.},
  publisher = {My University},
  year = {1979}
}

@article{HazelLivePaper,
  title = {Live functional programming with typed holes},
  volume = {3},
  ISSN = {2475-1421},
  url = {http://dx.doi.org/10.1145/3290327},
  DOI = {10.1145/3290327},
  number = {POPL},
  journal = {Proceedings of the ACM on Programming Languages},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Omar,  Cyrus and Voysey,  Ian and Chugh,  Ravi and Hammer,  Matthew A.},
  year = {2019},
  month = jan,
  pages = {1–32}
}

@inbook{StandardMLTypeTheory,
  title = {A Type-Theoretic Interpretation of Standard ML},
  ISBN = {9780262281676},
  url = {http://dx.doi.org/10.7551/mitpress/5641.003.0019},
  DOI = {10.7551/mitpress/5641.003.0019},
  booktitle = {Proof,  Language,  and Interaction},
  publisher = {The MIT Press},
  author = {Harper,  Robert and Stone,  Christopher},
  year = {2000},
  month = may,
  pages = {341–388}
}

@article{CoreXML,
  title = {On the type structure of standard ML},
  volume = {15},
  ISSN = {1558-4593},
  url = {http://dx.doi.org/10.1145/169701.169696},
  DOI = {10.1145/169701.169696},
  number = {2},
  journal = {ACM Transactions on Programming Languages and Systems},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Harper,  Robert and Mitchell,  John C.},
  year = {1993},
  month = apr,
  pages = {211–252}
}

@article{LocalInference,
  title = {Local type inference},
  volume = {22},
  ISSN = {1558-4593},
  url = {http://dx.doi.org/10.1145/345099.345100},
  DOI = {10.1145/345099.345100},
  number = {1},
  journal = {ACM Transactions on Programming Languages and Systems},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Pierce,  Benjamin C. and Turner,  David N.},
  year = {2000},
  month = jan,
  pages = {1–44}
}

@inproceedings{BidirectionalTypes,
  series = {ICFP’13},
  title = {Complete and easy bidirectional typechecking for higher-rank polymorphism},
  url = {http://dx.doi.org/10.1145/2500365.2500582},
  DOI = {10.1145/2500365.2500582},
  booktitle = {Proceedings of the 18th ACM SIGPLAN international conference on Functional programming},
  publisher = {ACM},
  author = {Dunfield,  Jana and Krishnaswami,  Neelakantan R.},
  year = {2013},
  month = sep,
  collection = {ICFP’13}
}

@inbook{GradualObjects,
  title = {Gradual Typing for Objects},
  ISBN = {9783540735892},
  ISSN = {1611-3349},
  url = {http://dx.doi.org/10.1007/978-3-540-73589-2_2},
  DOI = {10.1007/978-3-540-73589-2_2},
  booktitle = {ECOOP 2007 – Object-Oriented Programming},
  publisher = {Springer Berlin Heidelberg},
  author = {Siek,  Jeremy and Taha,  Walid},
  year = {2007},
  pages = {2–27}
}

@inbook{GradualFunctional,
  title = {Gradual Typing for Functional Languages}
}

@book{PracticalFoundations,
  title = {Practical Foundations for Programming Languages},
  ISBN = {9781316576892},
  url = {http://dx.doi.org/10.1017/CBO9781316576892},
  DOI = {10.1017/cbo9781316576892},
  publisher = {Cambridge University Press},
  author = {Harper,  Robert},
  year = {2016},
  month = mar 
}

@article{CMTT,
  title = {Contextual modal type theory},
  volume = {9},
  ISSN = {1557-945X},
  url = {http://dx.doi.org/10.1145/1352582.1352591},
  DOI = {10.1145/1352582.1352591},
  number = {3},
  journal = {ACM Transactions on Computational Logic},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Nanevski,  Aleksandar and Pfenning,  Frank and Pientka,  Brigitte},
  year = {2008},
  month = jun,
  pages = {1–49}
}

@article{ModalJudgements,
  title = {A judgmental reconstruction of modal logic},
  volume = {11},
  ISSN = {1469-8072},
  url = {http://dx.doi.org/10.1017/S0960129501003322},
  DOI = {10.1017/s0960129501003322},
  number = {04},
  journal = {Mathematical Structures in Computer Science},
  publisher = {Cambridge University Press (CUP)},
  author = {PFENNING,  FRANK and DAVIES,  ROWAN},
  year = {2001},
  month = jul 
}

@article{FunctionalProgExplain,
  title = {Functional programs that explain their work},
  volume = {47},
  ISSN = {1558-1160},
  url = {http://dx.doi.org/10.1145/2398856.2364579},
  DOI = {10.1145/2398856.2364579},
  number = {9},
  journal = {ACM SIGPLAN Notices},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Perera,  Roly and Acar,  Umut A. and Cheney,  James and Levy,  Paul Blain},
  year = {2012},
  month = sep,
  pages = {365–376}
}

@article{MarkedLocalisation,
  title = {Total Type Error Localization and Recovery with Holes},
  volume = {8},
  ISSN = {2475-1421},
  url = {http://dx.doi.org/10.1145/3632910},
  DOI = {10.1145/3632910},
  number = {POPL},
  journal = {Proceedings of the ACM on Programming Languages},
  publisher = {Association for Computing Machinery (ACM)},
  author = {Zhao,  Eric and Maroof,  Raef and Dukkipati,  Anand and Blinn,  Andrew and Pan,  Zhiyi and Omar,  Cyrus},
  year = {2024},
  month = jan,
  pages = {2041–2068}
}

@inproceedings{Gradualizer,
  series = {POPL ’16},
  title = {The gradualizer: a methodology and algorithm for generating gradual type systems},
  url = {http://dx.doi.org/10.1145/2837614.2837632},
  DOI = {10.1145/2837614.2837632},
  booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  publisher = {ACM},
  author = {Cimini,  Matteo and Siek,  Jeremy G.},
  year = {2016},
  month = jan,
  pages = {443–455},
  collection = {POPL ’16}
}

@inproceedings{GradualizerDynamic,
  series = {POPL ’17},
  title = {Automatically generating the dynamic semantics of gradually typed languages},
  volume = {7},
  url = {http://dx.doi.org/10.1145/3009837.3009863},
  DOI = {10.1145/3009837.3009863},
  booktitle = {Proceedings of the 44th ACM SIGPLAN Symposium on Principles of Programming Languages},
  publisher = {ACM},
  author = {Cimini,  Matteo and Siek,  Jeremy G.},
  year = {2017},
  month = jan,
  pages = {789–803},
  collection = {POPL ’17}
}

@book{TAPL,
author = {Pierce, Benjamin C.},
title = {Types and Programming Languages},
year = {2002},
isbn = {0262162091},
publisher = {The MIT Press},
edition = {1st},
abstract = {A type system is a syntactic method for automatically checking the absence of certain erroneous behaviors by classifying program phrases according to the kinds of values they compute. The study of type systems -- and of programming languages from a type-theoretic perspective -- has important applications in software engineering, language design, high-performance compilers, and security.This text provides a comprehensive introduction both to type systems in computer science and to the basic theory of programming languages. The approach is pragmatic and operational; each new concept is motivated by programming examples and the more theoretical sections are driven by the needs of implementations. Each chapter is accompanied by numerous exercises and solutions, as well as a running implementation, available via the Web. Dependencies between chapters are explicitly identified, allowing readers to choose a variety of paths through the material.The core topics include the untyped lambda-calculus, simple type systems, type reconstruction, universal and existential polymorphism, subtyping, bounded quantification, recursive types, kinds, and type operators. Extended case studies develop a variety of approaches to modeling the features of object-oriented languages.}
}

  